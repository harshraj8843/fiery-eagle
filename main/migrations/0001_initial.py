# Generated by Django 3.2.8 on 2021-10-31 16:29

import ckeditor.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='answer_count',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='backup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_day', models.IntegerField(default=0)),
                ('date_month', models.IntegerField(default=0)),
                ('date_year', models.IntegerField(default=0)),
                ('sent', models.BooleanField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='email_subscribe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name='monthly_site_visit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_month', models.IntegerField()),
                ('date_year', models.IntegerField()),
                ('number', models.IntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='question_count',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='question_table',
            fields=[
                ('question_id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=50)),
                ('description', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('time', models.DateTimeField(auto_now_add=True)),
                ('upvote', models.IntegerField(default=0)),
                ('views', models.IntegerField(default=0)),
                ('admin_seen', models.BooleanField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='today_answer_count',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_day', models.IntegerField(default=0)),
                ('date_month', models.IntegerField(default=0)),
                ('date_year', models.IntegerField(default=0)),
                ('number', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='today_question_count',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_day', models.IntegerField(default=0)),
                ('date_month', models.IntegerField(default=0)),
                ('date_year', models.IntegerField(default=0)),
                ('number', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='today_site_visit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_day', models.IntegerField(default=0)),
                ('date_month', models.IntegerField(default=0)),
                ('date_year', models.IntegerField(default=0)),
                ('number', models.IntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='total_site_visit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='userdata',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.IntegerField(default=0)),
                ('answer', models.IntegerField(default=0)),
                ('points', models.IntegerField(default=5)),
                ('image', models.ImageField(blank=True, upload_to='user')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='question_tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.question_table')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.tag')),
            ],
        ),
        migrations.AddField(
            model_name='question_table',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.userdata'),
        ),
        migrations.CreateModel(
            name='question_comment',
            fields=[
                ('comment_id', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=500)),
                ('seen', models.BooleanField(default=0)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.question_table')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.userdata')),
            ],
        ),
        migrations.CreateModel(
            name='q_upvote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.question_table')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.userdata')),
            ],
        ),
        migrations.CreateModel(
            name='q_report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(auto_now_add=True)),
                ('seen', models.BooleanField(default=0)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.question_table')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.userdata')),
            ],
        ),
        migrations.CreateModel(
            name='contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=1000)),
                ('time', models.DateTimeField(auto_now_add=True)),
                ('seen', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.userdata')),
            ],
        ),
        migrations.CreateModel(
            name='answer_table',
            fields=[
                ('answer_id', models.AutoField(primary_key=True, serialize=False)),
                ('description', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('time', models.DateTimeField(auto_now_add=True)),
                ('upvote', models.IntegerField(default=0)),
                ('seen', models.BooleanField(default=0)),
                ('admin_seen', models.BooleanField(default=0)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.question_table')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.userdata')),
            ],
        ),
        migrations.CreateModel(
            name='answer_comment',
            fields=[
                ('comment_id', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=500)),
                ('seen', models.BooleanField(default=0)),
                ('answer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.answer_table')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.userdata')),
            ],
        ),
        migrations.CreateModel(
            name='a_upvote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.answer_table')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.userdata')),
            ],
        ),
        migrations.CreateModel(
            name='a_report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(auto_now_add=True)),
                ('seen', models.BooleanField(default=0)),
                ('answer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.answer_table')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.userdata')),
            ],
        ),
    ]
